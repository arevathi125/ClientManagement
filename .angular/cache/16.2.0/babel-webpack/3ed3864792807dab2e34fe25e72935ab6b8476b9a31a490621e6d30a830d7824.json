{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let EditClientComponent = class EditClientComponent {\n  constructor(http, route, router) {\n    this.http = http;\n    this.route = route;\n    this.router = router;\n    this.id = 0;\n    this.name = '';\n    this.email = '';\n    this.address = '';\n    this.password = '';\n    this.repeatPassword = '';\n    this.meetingTopic = '';\n    this.numberOfPeople = 0;\n    this.startTime = '';\n    this.message = '';\n  }\n  ngOnInit() {\n    console.log('Id is Before' + this.id);\n    this.route.paramMap.subscribe(params => {\n      console.log('Id is After' + this.id);\n      const idParam = params.get(\"id\");\n      //const idParam=params.get('client_id');\n      console.log('Id is ' + idParam);\n      if (idParam !== null) {\n        this.id = +idParam;\n        console.log('IdParam is ' + idParam);\n        this.fetchClient();\n      } else {\n        console.log(\"id is missing or null\");\n      }\n    });\n  }\n  fetchClient() {\n    this.http.get('http://localhost:3000/getClient/:id' + this.id).subscribe(response => {\n      const client = response[0];\n      this.name = client.name, this.email = client.email, this.address = client.address, this.password = client.password, this.repeatPassword = client.repeat_password, this.meetingTopic = client.meeting_topic, this.numberOfPeople = client.number_of_people, this.startTime = client.start_time;\n    }, error => {\n      console.error('Error fetching the Client Details', error);\n    });\n  }\n  updatedSchedule() {\n    const client = {\n      id: this.id,\n      name: this.name,\n      email: this.email,\n      address: this.address,\n      password: this.password,\n      repeat_password: this.repeatPassword,\n      meeting_topic: this.meetingTopic,\n      number_of_people: this.numberOfPeople,\n      start_time: this.startTime\n    };\n    this.http.put('http://localhost:3000/updateClient', client).subscribe(response => {\n      this.message = response.message;\n      //this.router.navigate(['/view'])\n    }, error => {\n      console.error('Error Updating the Client Details', error);\n    });\n  }\n};\nEditClientComponent = __decorate([Component({\n  selector: 'app-edit-client',\n  templateUrl: './edit-client.component.html',\n  styleUrls: ['./edit-client.component.css']\n})], EditClientComponent);","map":{"version":3,"names":["Component","EditClientComponent","constructor","http","route","router","id","name","email","address","password","repeatPassword","meetingTopic","numberOfPeople","startTime","message","ngOnInit","console","log","paramMap","subscribe","params","idParam","get","fetchClient","response","client","repeat_password","meeting_topic","number_of_people","start_time","error","updatedSchedule","put","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\areva\\OneDrive\\Documents\\calTech_workspace\\angular Workspace\\Final_Project\\src\\app\\edit-client\\edit-client.component.ts"],"sourcesContent":["import { Component ,OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-edit-client',\n  templateUrl: './edit-client.component.html',\n  styleUrls: ['./edit-client.component.css']\n})\nexport class EditClientComponent implements OnInit {\n  id:number=0;\n  name:String='';\n  email:String='';\n  address:String='';\n  password:String='';\n  repeatPassword:String='';\n  meetingTopic:String='';\n  numberOfPeople:number=0;\n  startTime:String='';\n  message:string='';\n  constructor(private http:HttpClient,private route:ActivatedRoute,private router:Router){}\n  ngOnInit(): void {\n    console.log('Id is Before'+this.id);\n    \n    this.route.paramMap.subscribe(params=>{\n      console.log('Id is After'+this.id);\n      const idParam=params.get(\"id\");\n      //const idParam=params.get('client_id');\n      console.log('Id is '+idParam);\n      if(idParam!== null){\n        this.id=+idParam;\n        console.log('IdParam is '+idParam);\n        this.fetchClient();\n      }\n      else{\n        console.log(\"id is missing or null\");\n      }\n    })\n  }\n  fetchClient(){\n    this.http.get('http://localhost:3000/getClient/:id'+this.id).subscribe((response:any)=>\n    {\n      const client=response[0];\n      this.name=client.name,\n    this.email=client.email,\n    this.address=client.address,\n   this.password=client.password,\n    this.repeatPassword=client.repeat_password,\n    this.meetingTopic=client.meeting_topic,\n    this.numberOfPeople=client.number_of_people,\n    this.startTime=client.start_time;\n    },\n    (error)=>{console.error('Error fetching the Client Details',error);}\n    )\n  }\n  \n  updatedSchedule(){\n    const client={\n    id:this.id,\n    name:this.name,\n    email:this.email,\n    address:this.address,\n    password:this.password,\n    repeat_password:this.repeatPassword,\n    meeting_topic:this.meetingTopic,\n    number_of_people:this.numberOfPeople,\n    start_time:this.startTime\n    }\n    this.http.put('http://localhost:3000/updateClient',client).subscribe((response:any)=>\n    {\n      this.message=response.message;\n      //this.router.navigate(['/view'])\n    },\n\n    (error)=>{console.error('Error Updating the Client Details',error);}\n    )\n  }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}